#+TITLE: MIS Project Documentation
#+AUTHOR: Jan Frederick Eick, Benjamin Burse
#+OPTIONS: toc:nil

* Introduction
In their paper "MyShake: A smartphone seismic network for earthquake early
  warning and beyond" the authors are discribing how many countries in the
  world are still suffering from insufficient to no earthquake prewarning at
  all. The consequences are thousands of people still dying in earthquakes
  every year. There approach to the problem was the validation and
  implementation of a low cost, highly available prewarning system based
  on modern smartphones and mobile wireless communication. The idea was to
  develop a smartphone application which makes use of the already built-in
  accelerometer of smart devices, to detect earthquakes. In case of a
  positive detection, a short message with all relevant data is sent over to
  a server. The servers task is to collect all data sent from the mobile
  devices and decide, based on the number of occurrences, if a real
  earthquake is on the way. After an earthquake is being detected, the server
  notifies all users in the region.

* Implementation
** Original implementation
   The authors of MyShake designed the application in a way that it constantly
   records accelerometer sensor data using a background service. These sensor
   readings are stored in a circular buffer which holds 250 sensor samples in
   the default settings. (25 Hertz for 10 seconds) With each new updated sensor
   reading three features of the signal are calculated:
   1. The interquartile range
   2. The maximum zero-crossing rate
   3. The cumulative absolute velocity of the acceleration vector sum
   These features are used as inputs to a trained artificial neural network
   which classifies the sensor data. If the output reaches a threshold of 0.9,
   the state of the application is changed to "streaming" and the application
   starts streaming measurement data to the server. 

   The server can then decide if it notifies nearby devices to start streaming
   as well or if an earth quake warning should be issued.

   The authors of the paper trained their neural network using a shake table and
   a wide variety of mobile devices. They also used sensor readings of real
   earth quakes from seismic research centers which have been filtered and
   downsampled to resemble sensor readings from mobile phones.

   The server is able to further classify different sensor readings as earth
   quakes and can calculate the approximate magnitude and location of the
   seismic event. 
   
** Mobile Application
*** Reverse engineering the ANN classifier
*** Possible approach without ANNs

** Backend
   - Python
   - XMLRPC

** Libraries used
* Results
** What we achieved
   With our implementation we were able to set up a working front- and
   backend. As already described, the frontend collects the earthquake data and the
   backend does the registration of unique devices, evaluation and
   notification. We were able to detect a possible earthquakes on a device
   and process the received information on the server side. Afterwards we
   were also able to notify all registered
   devices of a possible earthquake via googles FCM API (Firebase Cloud
   Messaging, successor of GCM - Google Cloud Messaging).

** What we did not achieve
   As also already explained, the original implementation of the application
   used an ANN classifier (Artifical Neuronal Network) to separate real
   earthquakes from other events like hitting the table. We were not able to
   construct an ANN on our own, because of the lack of access and
   understanding of real earthquake data. We first tried to use a kind of
   activity detection as a classifier, with very bad results, but then switched over to the
   reverse engineered ANN classifier of the authors.

   In difference to the original backend, which was able to calculate the
   center and spread direction of the earthquake, our backend is limited to a
   very basic data analysis (via threshold) and notification functionality.
   This could be a possible point for further development.
   and notification
